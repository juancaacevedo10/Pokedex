{"version":3,"sources":["components/CardsPokemon.js","components/Loading.js","components/Content.js","components/DetailsPokemon.js","pages/App.js","index.js"],"names":["CardsPokemon","name","picture","number","types","abilities","pictureBack","weightPokemon","heightPokemon","evolution","className","Card","to","pathname","state","nombre","imagen","id","tipos","habilidades","imagenback","peso","altura","evolucion","Img","style","width","variant","src","Body","Title","Text","Footer","map","key","Button","type","Loading","Content","useState","pokemons","loading","data","setData","pokeBackup","setPokeBackup","setEvolution","useEffect","arrayPokemon","arrayEvolution","a","i","fetch","response","json","push","responseEvolution","dataEvolution","setTimeout","fetchData","Form","inline","FormControl","placeholder","onChange","e","names","target","value","result","filter","pokemon","indexOf","toLowerCase","CardGroup","index","sprites","front_default","back_default","weight","height","DetailsPokemon","props","location","console","log","Row","Col","xs","md","habil","ability","tipo","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a142dc90.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n// import Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n// import Container from 'react-bootstrap/Container'\r\n// import Row from 'react-bootstrap/Row'\r\n// import Col from 'react-bootstrap/Col'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CardsPokemon = ({ name, picture, number, types, abilities, pictureBack, weightPokemon, heightPokemon, evolution }) => {\r\n\r\n  return (\r\n    <div className='col-12 col-sm-6 col-md-3 mt-4'>\r\n      <Card className='card border-primary'>\r\n        <Link to={{\r\n          pathname: '/details',\r\n          state: {\r\n            nombre: name,\r\n            imagen: picture,\r\n            id: number,\r\n            tipos: types,\r\n            habilidades: abilities,\r\n            imagenback: pictureBack,\r\n            peso: weightPokemon,\r\n            altura: heightPokemon,\r\n            evolucion: evolution\r\n          }\r\n        }}>\r\n          <Card.Img className='img-fluid rounded mx-auto d-block ' style={{ width: '60%' }} variant='top' src={picture} />\r\n        </Link>\r\n        <Card.Body className='text-primary card border-primary'>\r\n          <Card.Title>ID/{number}</Card.Title>\r\n          <Card.Text>\r\n            Name:  {name}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer className='bg-primary'>\r\n          <small id='list-types' className='text-white'>{types.map((tipos, key) => { return <Button key={key + 1} className='ml-3' variant='outline-light'> {tipos.type.name} </Button> })}\r\n          </small>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\nexport default CardsPokemon\r\n","import React from 'react'\r\nimport '../styles/Loading.css'\r\n\r\nconst Loading = () => (\r\n  <div className='alignLoading'>\r\n    <div className='loader'>Loading...</div>\r\n  </div>\r\n)\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect } from 'react'\r\nimport CardsPokemon from './CardsPokemon'\r\nimport CardGroup from 'react-bootstrap/CardGroup'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\nimport Loading from './Loading'\r\n\r\nconst Content = () => {\r\n  const [data, setData] = useState({\r\n    pokemons: [],\r\n    loading: false\r\n  })\r\n  const [pokeBackup, setPokeBackup] = useState([])\r\n  const [evolution, setEvolution] = useState([])\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      loading: true\r\n    })\r\n    const arrayPokemon = []\r\n    const arrayEvolution = []\r\n    const fetchData = async () => {\r\n      for (let i = 1; i < 26; i++) {\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}`)\r\n        const data = await response.json()\r\n        arrayPokemon.push(data)\r\n        const responseEvolution = await fetch(`https://pokeapi.co/api/v2/evolution-chain/${i}`)\r\n        const dataEvolution = await responseEvolution.json()\r\n        arrayEvolution.push(dataEvolution)\r\n      }\r\n      setTimeout(() => {\r\n        setData({\r\n          pokemons: arrayPokemon,\r\n          loading: false\r\n        })\r\n        setPokeBackup(arrayPokemon)\r\n        setEvolution(arrayEvolution)\r\n      }, 1500)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleChange = (e) => {\r\n    const names = e.target.value\r\n    const info = pokeBackup\r\n    const result = info.filter(pokemon =>\r\n      pokemon.name.indexOf(names.toLowerCase()) > -1)\r\n    setData({\r\n      pokemons: result\r\n    })\r\n  }\r\n\r\n  if (data.loading) {\r\n    return <Loading />\r\n  }\r\n\r\n return (\r\n    <div>\r\n      <h1 className='text-center'>Pokedex</h1>\r\n      <Form inline className='justify-content-center'>\r\n        <FormControl type='text' placeholder='Search' className='col-3 mr-sm-2 text-center' onChange={handleChange} />\r\n      </Form>\r\n      <div className='container-fluid'>\r\n        <div className='row '>\r\n          <div className='col-12'>\r\n            <CardGroup>\r\n              {data.pokemons.map((pokemon, index) => {\r\n                return <CardsPokemon\r\n                  key={index} name={pokemon.name}\r\n                  picture={pokemon.sprites.front_default}\r\n                  number={pokemon.id}\r\n                  types={pokemon.types}\r\n                  abilities={pokemon.abilities}\r\n                  pictureBack={pokemon.sprites.back_default}\r\n                  weightPokemon={pokemon.weight}\r\n                  heightPokemon={pokemon.height}\r\n                  evolution={evolution[index]}\r\n                />\r\n              })}\r\n            </CardGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst DetailsPokemon = (props) => {\r\n  const state = props.location.state\r\n  console.log(props)\r\n  const peso = state.peso / 10\r\n  const altura = state.altura / 10\r\n  return (\r\n\r\n    <div className='container mt-4'>\r\n      <Card className='card border-primary'>\r\n        <Card.Body className='text-primary card border-primary'>\r\n          <Row>\r\n            <Col xs={6} md={6}>\r\n              <Card.Title>ID/ {` ${state.id}`}</Card.Title>\r\n            </Col>\r\n\r\n            <Col xs={6} md={6}>\r\n              <div className='d-flex justify-content-end'>\r\n                <Link to={{ pathname: '/' }}>\r\n                  <button type='button' className='btn btn-danger rounded-circle d-flex justify-content-end '> x</button>\r\n                </Link>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12} md={4}>\r\n              <Card.Img className='img-fluid rounded mx-auto d-block ' style={{ width: '30%' }} variant='top' src={state.imagenback} />\r\n            </Col>\r\n\r\n            <Col xs={12} md={4}>\r\n              <Card.Img className='img-fluid rounded mx-auto d-block ' style={{ width: '30%' }} variant='top' src={state.imagen} />\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <h1>ability</h1>\r\n              <ul>\r\n                {state.habilidades.map((habil, key) => { return <li key={key + 1} className='text-dark'> {habil.ability.name} </li> })}\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n          <Card.Title>\r\n            Name: {state.nombre}\r\n          </Card.Title>\r\n          <Card.Body className='bg-primary text-white'>\r\n            <Row>\r\n              <Col xs={6} md={4}>\r\n                <h3>\r\n                weight:\r\n                </h3>\r\n                {peso} kg\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <h3>\r\n                height:\r\n                </h3>\r\n                {altura} m\r\n              </Col>\r\n              <Col xs={6} md={4}>\r\n                <h3>\r\n                types:\r\n                </h3>\r\n                {state.tipos.map((tipo, key) => { return <Button key={key + 1} className='ml-2' variant='outline-light'> {tipo.type.name} </Button> })}\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card.Body>\r\n        <Card.Footer className='bg-primary'>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DetailsPokemon\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Content from '../components/Content'\r\nimport DetailsPokemon from '../components/DetailsPokemon'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/' component={Content} />\r\n          <Route exact path='/details' component={DetailsPokemon} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './pages/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/Index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}